// <auto-generated />
using System;
using Backend.Persistency;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace backend.Migrations
{
    [DbContext(typeof(TrackAndTraceContext))]
    [Migration("20211027084611_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Backend.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DropOffKey")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TracingId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DropOffKey");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("Backend.Models.DropOff", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.Property<int>("Terminal")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ZipCodeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Key");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("DropOffs");
                });

            modelBuilder.Entity("Backend.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeliveryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Backend.Models.ZipCode", b =>
                {
                    b.Property<int>("ZipCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCodeValue")
                        .HasColumnType("TEXT");

                    b.HasKey("ZipCodeId");

                    b.ToTable("ZipCodes");
                });

            modelBuilder.Entity("Backend.Models.Delivery", b =>
                {
                    b.HasOne("Backend.Models.DropOff", "DropOff")
                        .WithMany()
                        .HasForeignKey("DropOffKey");

                    b.Navigation("DropOff");
                });

            modelBuilder.Entity("Backend.Models.DropOff", b =>
                {
                    b.HasOne("Backend.Models.ZipCode", "ZipCode")
                        .WithMany()
                        .HasForeignKey("ZipCodeId");

                    b.Navigation("ZipCode");
                });

            modelBuilder.Entity("Backend.Models.Status", b =>
                {
                    b.HasOne("Backend.Models.Delivery", null)
                        .WithMany("StatusHistory")
                        .HasForeignKey("DeliveryId");
                });

            modelBuilder.Entity("Backend.Models.Delivery", b =>
                {
                    b.Navigation("StatusHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
